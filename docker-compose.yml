version: '3.5'

services:

  database:
    container_name: database
    build:
      context: ./db
      dockerfile: Dockerfile
    volumes:
      - ./data:/var/lib/postgresql/data
    networks:
      back:
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
  server:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./server:/server
    ports:
      - 5001:5000
    networks:
      back:
      front:
        ipv4_address: 172.16.239.10
    environment:
     
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
      - REDIS_PW=${REDIS_PW}
      - DATABASE=${DATABASE}
      - SECRET_KEY=${SECRET_KEY}
      - JWT_SECRET_KEY=${JWT_SECRET}





  redis:
    container_name: cache
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PW}
    expose:
      - 6379
    networks:
      back:


  task_queue:
    container_name: tasks
    restart: always
    build:
      context: ./server/tasks
      dockerfile: Dockerfile
    volumes:
      - ./server:/app
    command: celery -A tasks worker  --loglevel=info
    environment:
      - REDIS_PW=${REDIS_PW}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PW=${POSTGRES_PW}
      - DATABASE=${DATABASE}


    networks:
      back:
    depends_on:
      - redis

  monitor:
    container_name: task_monitor
    build:
      context: ./server/tasks
      dockerfile: Dockerfile
    ports:
      - 5555:5555
    volumes:
      - ./server/:/app
    entrypoint: flower
    command: -A tasks worker --port=5555 --broker=redis://:${REDIS_PW}@redis:6379/1
    networks:
      back:
    depends_on:
      - redis

networks:
  front:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.16.239.0/24"

  back:
